[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "informatique-realitaire"
version = "1.0.0"
description = "Informatique Réalitaire (IR) : Framework VR-inspiré pour IA incarnée"
readme = "README.md"
authors = [
    {name = "Daouda Abdoul Anzize", email = "nexusstudio100@gmail.com"}
]
maintainers = [
    {name = "Daouda Abdoul Anzize", email = "nexusstudio100@gmail.com"}
]
license = {text = "MIT"}
keywords = [
    "artificial-intelligence",
    "virtual-reality",
    "embodied-ai",
    "ai-safety",
    "simulation",
    "cognitive-architecture",
    "DECAP-NEXUS"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
requires-python = ">=3.9"
dependencies = [
    "groq>=0.4.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0"
]
server = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0"
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0"
]

[project.urls]
Homepage = "https://github.com/Tryboy869/informatique-realitaire"
Documentation = "https://github.com/Tryboy869/informatique-realitaire/blob/main/README.md"
Repository = "https://github.com/Tryboy869/informatique-realitaire"
Issues = "https://github.com/Tryboy869/informatique-realitaire/issues"

[project.scripts]
ir-engine = "app:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["app*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.black]
line-length = 100
target-version = ["py39", "py310", "py311"]
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py39"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.ir-engine]
# Configuration spécifique IR Engine
[tool.ir-engine.server]
port = 8000
host = "0.0.0.0"
workers = 4

[tool.ir-engine.security]
max_tokens = 2000
rate_limit = 100
rate_window_seconds = 60

[tool.ir-engine.models]
default_temperature = 0.7
max_context_length = 4096